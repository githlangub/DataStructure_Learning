1. 数组作为形参进行传递时,其本质是以指向该数组的指针为形参进行传递,即void(int[])的函数原型是void(int*),因为c++中不允许整个数组作为参数进行传递.
2. 用指针表示数组时,该对象已经失去了"数组"的属性,故无法用sizeof获取其长度.

3.没有参数的函数调用时,不能写void,否则会报错.

4.for循环计数器最好用unsigned类型,因为不知道计数过程中是否会出现负数.

5.当某个unsigned类型的变量作为判断条件进入表达式时,应注意是否会出现负数,否则很可能导致死循环.

6. 任何在模板声明域外调用模板时,都必须用尖括号表明类型参数.

7. private成员只有本类成员才能访问,protected成员派生类也能访问.一个类不能直接访问它的类成员的private或protected成员.

8. 初始化与赋值不同,区别一:const变量能被初始化但不能被赋值;区别二:类的构造函数用于初始化对象而非给对象赋值.

9. 为什么模板代码不能将声明和实现放在不同的文件?
	c++的编译模型采用的是分离式编译,即将每一个源码文件及其所包含的头文件作为一个编译单元进行编译.每一个编译单元通过编译和汇编产生一个目标代码文件,然后再将每一个目标代码文件链接形成可执行文件.
	因为模板代码并未指明参数类型,故没有办法分配内存空间,也就没有办法进行编译,所以链接器进行链接时会因为找不到符号而产生报错.
	若要对模板代码进行分离式编译,可现将其显示实例化再编译.
10. vim为新的后缀名添加语法高亮
	.vimrc中添加
if has("autocmd")
       autocmd BufNewFile,Bufread *.txt set syntax=help
endif
	其中.txt为后缀名,help为语法配色方案
法二：/usr/share/vim/vim80/filetype.vim用于根据后缀名检测语法类型

11. 内联函数可以在类外定义，类内定义的函数默认为内联函数。inline标识符只需在声明或定义任一处出现即可。

